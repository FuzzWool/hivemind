Let there be Levels
===========
Seamless loading from level to level. No transitions.

Goals:
x Load levels from a file.
Append a level to another level from two level files.
Gradually load and de-load levels during exploration.
Append levels based on a world file's data.

	Mid-term:
	x Ctrl-Right-click to bring up a list of tiles to choose.
	Camera moves in all four directions.
	Mouse scroller zooms the camera in and out.

----
0.0.3 - Level Editor: tile selection
+ class TileSelector
	Ctrl+Click brings open a menu for selecting tiles.
	Selections cannot go out of bounds.

+ class MyMouse

*LevelEditor needs Mouse and Level.
*TileSelector needs Level('s texture and alphabet)
			 and LevelEditor('s Mouse and mouse_tex)

~ module LevelEditor now resizes/scales the window.

---
B

x Make a review of the hierachy between Level, LevelEditor and TileSelector.
x Clean-up test1, LevelEditor and TileSelector.

x LevelEditor holds mouse.
	x toggle grid
	x place position
	x remove position
	x select grid
	x move_cursor position

x Close the TileSelector upon mouse release.
	x MyMouse (left, right) needs 'release'.
		x Button needs 'release'.

x Don't let tile selections go out of bounds.

Move LevelEditor and TileSelector in to the module.

---
A

x Resize window when using the level editor.
	x Scale 1, shows 4 rooms

Ctrl-Left-click to bring up a list of tiles to choose.
	
	x Open and close a mysprite box*.
	x Create multiple sprites within this box.
	x Box only opens upon being called.
	x Snap the cursor to the tile-box.
		x Make a special mouse subclass for grids.
	x Disable the placement of tiles while active.
	x Loop now uses the mouse object.
	x Snap box opening to absolute grid.

	TileSelector
		x Holds tile data for placement.
			 x Tiles should be held in an [x][y] format.
		
		x Tile being used is highlighted on the list.
			x Cursor is moved.
			x Tile is selected.
		x Tile being used is placed by LevelEditor.