Let there be Cool Moves
===========
Nut is born, and she has basic controls.
She can walk across slopes.

Goals:
x Make Nut with basic left and right controls.
x Allow Nut to run across 1/2-block slopes.

x Add a DIVE.
x Add a WALL JUMP.
x Add CRAWLING.
x Add a SLIDE KICK.

~ Major refactoring for ROOM and WORLDMAP classes.
	+ Asset loading (tilesheets/collisions) done in advance.
	~ Loading is now more obvious.
	+ Better collision support. (independant of sprite)
	+ More robust Tile class.
	~ Easier to read, split into functionality.


~ Made PHYSICS adjustments.
	* Reduced x slowdown.
		- Nut may no longer scale a single wall.
	* Reduced vertical wall jump amount.
		- In a 4-block gap, Nut may only make 1-block progress
	* Increased jump amount.
		+ Nut may now cleanly jump over 2-tile platforms.

+ Add WALL HANG.
	* Nut must be completely overlapping a wall to hug.
	~ Dive is now a block movement.
	+ Add basic wall hang.
	+ Add crouching > wall hang combination.


+ Added DUST EFFECT.
	+ new axis_animation /w subclasses
	A bare class with fleshed out sub-classes.
		* Basic animation which starts and then stops.
		+ Bouncing sub-class.
		+ oscillate sub-class


	+ Dive - slamming the ground. Bigger effect if faster.
	+ Wall-jumping - trail in mid-air; hitting a surface.
	+ Walking - Greater effect depending on speed.


+ Added DYNAMIC CAMERA.

	+ Remade ToolBox.
	+ Made Camera tool
		+ Room.Camera holds bools for each side.
		+ loading/saving values

	+ Made GameCamera
		+ Camera stops at lock enabled sides of rooms.
		+ Camera animates past enabled sides.

		+ Animation - works out speed by frames wanted.
			+ Good glitch
			Smooths the camera by repeatedly lowering the speed.


! Add COLLECTIBLES which OPEN ROOMS.
! Add RUNNING animation.
! Add TIMER.
! Add REPLAYS.


! running glitch (over the end of a tile)
! crawling > ducking animation stuttering
! slide > wall hang glitch (press l/r right before d)
! Holding both directional keys causes weird Nut walking.

! Add SLOPES. (They're broken!)
! clean overall state handling
! Use less MAGIC NUMBERS in state handling.
! Add PUNCHING.


=====

! Add COLLECTIBLES which OPEN ROOMS.

	~ level_editor tools split into tools directory

	+ load entities
		* entities > entity_room > entity hierachy
		+ for each room there is a list of entities to load
		+ entities are loaded by name and position

	+ created an Entity TOOL.
		+ orb graphic follows cursor

		===

		+ places down entities
		+ saves entities
		! remove entities

	! clean
		! make entity functions clearer

		! change Room > Entities hierachy
		to Room > Tiles


	! stress test
		press enter,
		a room completely filled with orbs is rendered
		does it lag?

	! render entities
		! entities render when focused by the camera
		! unrendered otherwise

	! orb
		! orbs bop up and down
		! orbs explode on impact with Nut
		! orbs have a shine behind them

	orb_tile
	! removes the tile it is on top of.
		! in a puff of smoke





=====

GOAL: Conserve RAM, speed up loading.


! Render Rooms only on-screen
	! Test to see if this stresses out the CPU
	! Test if this lags the game at all
! Render Level Editor sprites only on-screen

! fix Level Editor locks not appearing

====